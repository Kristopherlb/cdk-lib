$schema: "http://json-schema.org/draft-07/schema#"
title: Component Test Plan Schema
description: Schema for AI-generated test plans for CDK component packages, adhering to Platform Testing Standard v1.0.
type: object
additionalProperties: false

required:
  - plan_version
  - component
  - repository
  - generated_by
  - generated_at
  - tests

properties:
  plan_version:
    type: string
    description: Version of the test plan schema (matches Platform Testing Standard version).
    pattern: "^\\d+\\.\\d+$"
    example: "1.0"

  component:
    type: string
    description: Name of the component package under test (e.g., DynamoDbTableComponent).
    pattern: "^[a-zA-Z][a-zA-Z0-9-]+$"
    example: "DynamoDbTableComponent"

  component_version:
    type: string
    description: Optional component version or tag being tested.
    example: "v0.7.3"

  repository:
    type: string
    description: Repository path or URI where the component code resides.
    anyOf:
      - format: uri-reference
      - pattern: "^[a-zA-Z0-9_./-]+$"
    example: "https://git.example.com/platform/constructs#lib/dynamodb-table.ts"

  references:
    type: array
    description: Optional human-readable links to design docs/specs used by this plan.
    items: { type: string }
    default: []

  generated_by:
    type: string
    description: Identifier of the AI agent or tool generating the plan (or human).
    example: "ai-agent/v2.1"

  generated_at:
    type: string
    description: Timestamp of plan generation (ISO 8601).
    format: date-time
    example: "2025-09-07T16:11:00-05:00"

  ai_generated:
    type: boolean
    description: Whether this plan was AI-generated.
    default: false

  human_reviewed_by:
    type: string
    description: Required reviewer identity when ai_generated is true.
    default: ""

  tests:
    type: array
    description: List of test cases adhering to the Platform Testing Standard.
    minItems: 1
    items:
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - level
        - capability
        - oracle
        - invariants
        - fixtures
        - inputs
        - risks
        - evidence
        - compliance_refs
        - dependencies
      properties:
        id:
          type: string
          description: Unique test identifier per §11 (TP-<service>-<feature>-<NNN>).
          pattern: "^TP-[a-zA-Z0-9-]+-[a-zA-Z0-9-]+-\\d{3}$"
          example: "TP-dynamodb-table-config-001"

        name:
          type: string
          description: Human-friendly test name following Feature__Condition__ExpectedOutcome.
          pattern: "^[A-Za-z0-9]+__[A-Za-z0-9-]+__[A-Za-z0-9-]+$"
          example: "Defaults__CommercialContext__UsesPayPerRequest"

        level:
          type: string
          description: Test level per §3.
          enum: ["unit", "integration", "e2e"]
          example: "unit"

        capability:
          type: string
          description: Short description of the behavior under test.
          minLength: 10
          example: "Validates default configuration for Commercial environment"

        oracle:
          type: string
          description: Primary oracle per §5 (exactly one per test).
          enum: ["exact", "snapshot", "property", "contract", "metamorphic", "trace"]
          example: "exact"

        invariants:
          type: array
          description: Properties that must hold true per §3.
          minItems: 0
          items: { type: string }
          default: []

        fixtures:
          type: array
          description: Determinism setup per §6 (clock/RNG/I-O).
          minItems: 0
          items: { type: string }
          examples: ["clock:fixed", "rng:seeded:12345", "fs:tmpdir", "aws-sdk:stubbed"]
          default: []

        inputs:
          type: object
          description: Input design per §8.
          additionalProperties: false
          required: [shape]
          properties:
            shape:
              type: string
              description: Summary of input structure (e.g., config object, edge cases).
              example: "empty spec config for commercial context"
            notes:
              type: string
              description: Optional notes on generators, boundaries, or adversarial cases.
              default: ""

        risks:
          type: array
          description: Risks addressed by the test (e.g., boundary, compliance, idempotency).
          minItems: 0
          items:
            type: string
            enum: ["boundary", "compliance", "error-handling", "idempotency", "concurrency", "security"]
          default: []

        dependencies:
          type: array
          description: Repo files/modules this test covers (for traceability).
          minItems: 0
          items: { type: string }
          default: []

        evidence:
          type: array
          description: Artifacts for auditability per §11 (plan outputs, results, snapshots).
          minItems: 1
          items:
            type: string
            pattern: "^artifact://.+"
          example: ["artifact://test-results/unit/commercial-config.json"]

        snapshot_mask:
          type: array
          description: Volatile fields to mask in snapshot oracles per §13.
          minItems: 0
          items: { type: string }
          examples: ["tableArn", "creationDateTime", "timestamp", "uuid"]
          default: []

        compliance_refs:
          type: array
          description: References to platform standards or NIST/F
