# Platform Configuration for FedRAMP High Cloud Deployments
# Version: 1.0  
# Compliance Framework: FedRAMP High

defaults:
  # API Gateway Configuration Defaults
  api-gateway-rest:
    cors:
      allowOrigins: [] # NO cross-origin requests allowed by default - must be explicitly configured per service
      allowMethods: ["GET", "POST", "OPTIONS"] # Minimal methods only
      allowHeaders:
        - "Content-Type"
        - "Authorization"
      allowCredentials: false # Always disabled for highest security
      maxAge: 60 # Very short cache
    throttling:
      burstLimit: 200 # Very restrictive
      rateLimit: 100
    tracing:
      xrayEnabled: true # Mandatory for compliance

  api-gateway-http:
    cors:
      allowOrigins: [] # NO cross-origin requests allowed by default
      allowMethods: ["GET", "POST", "OPTIONS"] # Minimal methods only
      allowHeaders:
        - "Content-Type"
        - "Authorization"
      allowCredentials: false
      maxAge: 60
    throttling:
      burstLimit: 300 # Still very restrictive  
      rateLimit: 150
    accessLogging:
      enabled: true # Mandatory comprehensive logging
      format: '{"timestamp":"$context.requestTime","requestId":"$context.requestId","sourceIp":"$context.identity.sourceIp","method":"$context.httpMethod","path":"$context.routeKey","protocol":"$context.protocol","status":"$context.status","error":"$context.error.message","responseLength":"$context.responseLength","responseTime":"$context.responseLatency","userAgent":"$context.identity.userAgent","requestHeaders":"$context.requestHeaders"}'

  # WAF Web ACL Configuration Defaults
  waf-web-acl:
    scope: REGIONAL
    defaultAction: block # Most restrictive for FedRAMP High
    managedRuleGroups:
      - name: AWSManagedRulesCommonRuleSet
        vendorName: AWS
        priority: 1
        overrideAction: none
      - name: AWSManagedRulesKnownBadInputsRuleSet
        vendorName: AWS
        priority: 2
        overrideAction: none
      - name: AWSManagedRulesSQLiRuleSet
        vendorName: AWS
        priority: 3
        overrideAction: none
      - name: AWSManagedRulesLinuxRuleSet
        vendorName: AWS
        priority: 4
        overrideAction: none
      - name: AWSManagedRulesUnixRuleSet
        vendorName: AWS
        priority: 5
        overrideAction: none
    logging:
      enabled: true # Mandatory for compliance
      logDestinationType: cloudwatch
      redactedFields: []
    monitoring:
      enabled: true
      detailedMetrics: true # Mandatory for FedRAMP
      alarms:
      blockedRequestsThreshold: 100 # Stricter threshold
      allowedRequestsThreshold: 2000 # Stricter threshold
      sampledRequestsEnabled: true

  # VPC Configuration Defaults
  vpc:
    cidr: 10.0.0.0/16
    maxAzs: 3 # Multi-AZ required for high compliance
    natGateways: 2 # Redundancy required
    flowLogsEnabled: true
    flowLogRetentionDays: 2555 # 7 years for FedRAMP high
    subnets:
      public:
        cidrMask: 27 # Very small public subnets
        name: Public
      private:
        cidrMask: 25 # Larger private subnets
        name: Private
      database:
        cidrMask: 28
        name: Database
    vpcEndpoints:
      s3: true # All endpoints required
      dynamodb: true
      secretsManager: true
      kms: true
    dns:
      enableDnsHostnames: true
      enableDnsSupport: true
    monitoring:
      enabled: true
      detailedMetrics: true # Required for compliance
      alarms:
        natGatewayPacketDropThreshold: 250 # Most sensitive
        vpcFlowLogDeliveryFailures: 3

  # Step Functions State Machine Configuration
  step-functions-statemachine:
    stateMachineType: "STANDARD"
    loggingConfiguration:
      enabled: true # Mandatory for FedRAMP High
      level: "ALL"
      includeExecutionData: true # Required for detailed audit
    tracingConfiguration:
      enabled: true # Mandatory for high security
    timeout:
      seconds: 1800 # Shorter timeout for security (30 minutes)
    tags:
      service-type: "workflow"
      compliance-framework: "fedramp-high"
      logging-level: "comprehensive"
      audit-trail: "enabled"
      security-level: "high"

  # SSM Parameter Configuration
  ssm-parameter:
    parameterType: "secret" # Mandatory for high compliance
    sensitivityLevel: "confidential" # Required features
    validationPattern: "custom"
    tags:
      service-type: "configuration"
      compliance-framework: "fedramp-high"
      data-classification: "confidential"
      retention-period: "indefinite"

  # Observability Configuration Defaults
  observability:
    traceSamplingRate: 1.0   # 100% sampling for complete audit trail
    metricsInterval: 30       # 30 second intervals for high compliance
    logsRetentionDays: 2555   # 7 years retention
    
    # Alarm thresholds are now just data
    alarmThresholds:
      ec2:
        cpuUtilization: 70
        statusCheckFailed: 1
        networkIn: 25000000  # 25MB - most sensitive
      rds:
        freeStorageSpace: 3  # in GB - most conservative
        cpuUtilization: 75
        connectionCount: 60
      lambda:
        errorRate: 1  # percentage - most sensitive
        duration: 2000  # milliseconds - strictest
        throttles: 3
      alb:
        responseTime: 1  # seconds - strictest
        http5xxErrors: 3
        unhealthyTargets: 1
      sqs:
        messageAge: 120  # seconds - most sensitive
        deadLetterMessages: 2
      ecs:
        cpuUtilization: 70
        memoryUtilization: 70
        taskCount: 0
      vpc:
        natGatewayPacketDropThreshold: 250
        natGatewayPortAllocationErrors: 1
    
    # OTel environment variables template
    otelEnvironmentTemplate:
      OTEL_EXPORTER_OTLP_ENDPOINT: 'https://otel-collector.fedramp-high.{{ region }}.platform.local:4317'
      OTEL_EXPORTER_OTLP_HEADERS: 'authorization=Bearer {{ authToken }}'
      OTEL_SERVICE_NAME: '{{ componentName }}'
      OTEL_SERVICE_VERSION: '{{ serviceVersion }}'
      OTEL_RESOURCE_ATTRIBUTES: 'service.name={{ serviceName }},deployment.environment={{ environment }},cloud.provider={{ cloudProvider }},cloud.region={{ region }},compliance.framework={{ complianceFramework }}'
      OTEL_TRACES_SAMPLER: 'traceidratio'
      OTEL_TRACES_SAMPLER_ARG: '{{ traceSamplingRate }}'
      OTEL_METRICS_EXPORTER: 'otlp'
      OTEL_LOGS_EXPORTER: 'otlp'
      OTEL_PROPAGATORS: 'tracecontext,baggage,xray'
      OTEL_INSTRUMENTATION_COMMON_DEFAULT_ENABLED: 'true'
      OTEL_BSP_MAX_EXPORT_BATCH_SIZE: '128'  # Smallest batches for compliance
      OTEL_BSP_EXPORT_TIMEOUT: '10000'  # Shortest timeout
      OTEL_METRIC_EXPORT_INTERVAL: '{{ metricsInterval }}'
    
    # EC2 OTel UserData script template
    ec2OtelUserDataTemplate: |
      #!/bin/bash
      # EC2 OpenTelemetry Collector Installation Script - FedRAMP High
      # Managed by SREs, not developers
      
      # Update system with security patches and audit
      yum update -y --security
      echo "System update completed at $(date)" >> /var/log/security-audit.log
      
      # Install OTel Collector with full verification
      curl -L -o /tmp/otelcol-contrib.deb https://github.com/open-telemetry/opentelemetry-collector-releases/releases/latest/download/otelcol-contrib_linux_amd64.deb
      # Verify package integrity with checksums (in production, use GPG verification)
      echo "Package downloaded, verifying integrity..." >> /var/log/security-audit.log
      dpkg -i /tmp/otelcol-contrib.deb
      
      # Create configuration file with maximum security
      cat > /opt/aws/otel-collector/config.yaml << 'EOF'
      {{ otelAgentConfigJson }}
      EOF
      chmod 600 /opt/aws/otel-collector/config.yaml
      chown otelcol:otelcol /opt/aws/otel-collector/config.yaml
      
      # Set environment variables with audit trail
      {{ otelEnvironmentVars }}
      echo "export $(cat /proc/1/environ | tr '\\0' '\\n' | grep OTEL_)" >> /etc/environment
      echo "Environment variables set at $(date)" >> /var/log/security-audit.log
      
      # Start OTel Collector service with comprehensive logging
      systemctl enable otelcol-contrib
      systemctl start otelcol-contrib
      
      # Comprehensive audit logging
      echo "OpenTelemetry Collector installation completed at $(date) by $(whoami)" >> /var/log/otel-install.log
      echo "Configuration hash: $(md5sum /opt/aws/otel-collector/config.yaml)" >> /var/log/otel-install.log
      echo "Service status: $(systemctl is-active otelcol-contrib)" >> /var/log/otel-install.log
      echo "Process ID: $(pgrep otelcol-contrib)" >> /var/log/otel-install.log
      
      # Security audit entry
      echo "OTel Collector deployed with FedRAMP High compliance settings" >> /var/log/security-audit.log

  # Logging Configuration Defaults - FedRAMP High
  logging:
    retentionPolicies:
      default:
        retentionDays: 2555  # 7 years
        immutable: true
        encryptionLevel: "customer-managed"
        auditRequired: true
        maxSamplingRate: 1.0
    securityClassifications:
      default: "cui"
      lambda: "cui"
      ecs: "cui"
      rds: "cui"
      s3: "cui"
      sqs: "cui"
      vpc: "cui"
    samplingRates:
      ERROR: 1.0
      WARN: 1.0
      INFO: 1.0
      DEBUG: 0.1
      TRACE: 0.01
    logLevels:
      default: "DEBUG"
      lambda: "DEBUG"
      ecs: "DEBUG"
      rds: "DEBUG"
      s3: "DEBUG"
      sqs: "DEBUG"
      vpc: "DEBUG"
    redactionRules:
      base: ["email", "ssn", "creditCard", "phoneNumber"]
      phi: ["medicalRecordNumber", "insuranceId", "prescriptionData", "diagnosticData"]
      cui: ["governmentId", "securityClearance", "contractorInfo"]
    correlationFields:
      - "traceId"
      - "spanId"
      - "requestId"
      - "userId"
      - "sessionId"
      - "operationId"

  # Route 53 Record Configuration Defaults
  route53-record:
    record:
      ttl: 300
      evaluateTargetHealth: false
    tags:
      Component: "route53-record"
      ManagedBy: "platform"
      ComplianceFramework: "fedramp-high"

  # IAM Role Configuration Defaults
  iam-role:
    role:
      maxSessionDuration: 3600
      path: "/"
    compliance:
      permissionsBoundary: true
      leastPrivilege: true
      requireMfa: true
    tags:
      Component: "iam-role"
      ManagedBy: "platform"
      ComplianceFramework: "fedramp-high"

  # MCP Server Configuration Defaults
  mcp-server:
    container:
      imageTag: "latest"
      cpu: 1024
      memory: 2048
      taskCount: 3
      containerPort: 3000
    loadBalancer:
      enabled: true
      certificateArn: ""
      domainName: ""
    authentication:
      jwtSecret: ""
      tokenExpiration: "15m" # Very short for FedRAMP High
    dataSources:
      git:
        repositoryUrls: []
        accessTokenArn: ""
      aws:
        crossAccountRoles: []
        regions: ["us-east-1"]
      templates:
        repositoryUrl: ""
        branch: "main"
    vpc:
      vpcId: ""
      subnetIds: []
      securityGroupIds: []
    logging:
      retentionDays: 2555 # 7 years for FedRAMP High
    monitoring:
      enabled: true
      detailedMetrics: true # Required for FedRAMP High
    tags:
      Component: "mcp-server"
      ManagedBy: "platform"
      ComplianceFramework: "fedramp-high"
