# Platform Configuration for FedRAMP Moderate Cloud Deployments  
# Version: 1.0
# Compliance Framework: FedRAMP Moderate

defaults:
  # API Gateway Configuration Defaults
  api-gateway-rest:
    cors:
      allowOrigins:
        - "https://*.gov"
        - "https://*.mil" 
        - "https://admin.agency.gov"
      allowMethods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"] # No PATCH for compliance
      allowHeaders:
        - "Content-Type"
        - "Authorization"
        - "X-Requested-With"
      allowCredentials: false # Disabled for government security
      maxAge: 300 # Short cache for security
    throttling:
      burstLimit: 1000 # Conservative limits
      rateLimit: 500
    tracing:
      xrayEnabled: true # Mandatory for compliance

  api-gateway-http:
    cors:
      allowOrigins:
        - "https://*.gov"
        - "https://*.mil"
        - "https://admin.agency.gov"
      allowMethods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
      allowHeaders:
        - "Content-Type" 
        - "Authorization"
        - "X-Requested-With"
      allowCredentials: false
      maxAge: 300
    throttling:
      burstLimit: 1500
      rateLimit: 750
    accessLogging:
      enabled: true # Mandatory for compliance
      format: '{"requestId":"$context.requestId","ip":"$context.identity.sourceIp","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","routeKey":"$context.routeKey","status":"$context.status","responseLength":"$context.responseLength","userAgent":"$context.identity.userAgent"}'

  # WAF Web ACL Configuration Defaults
  waf-web-acl:
    scope: REGIONAL
    defaultAction: block # More restrictive for FedRAMP
    managedRuleGroups:
      - name: AWSManagedRulesCommonRuleSet
        vendorName: AWS
        priority: 1
        overrideAction: none
      - name: AWSManagedRulesKnownBadInputsRuleSet
        vendorName: AWS
        priority: 2
        overrideAction: none
      - name: AWSManagedRulesSQLiRuleSet
        vendorName: AWS
        priority: 3
        overrideAction: none
      - name: AWSManagedRulesLinuxRuleSet
        vendorName: AWS
        priority: 4
        overrideAction: none
      - name: AWSManagedRulesUnixRuleSet
        vendorName: AWS
        priority: 5
        overrideAction: none
    logging:
      enabled: true # Mandatory for compliance
      logDestinationType: cloudwatch
      redactedFields: []
    monitoring:
      enabled: true
      detailedMetrics: true # Mandatory for FedRAMP
      alarms:
      blockedRequestsThreshold: 250
      allowedRequestsThreshold: 3000
      sampledRequestsEnabled: true

  # VPC Configuration Defaults
  vpc:
    cidr: 10.0.0.0/16
    maxAzs: 2
    natGateways: 2 # Redundancy for compliance
    flowLogsEnabled: true
    flowLogRetentionDays: 1827 # 5 years for FedRAMP moderate
    subnets:
      public:
        cidrMask: 26 # Smaller for tighter control
        name: Public
      private:
        cidrMask: 24
        name: Private
      database:
        cidrMask: 28
        name: Database
    vpcEndpoints:
      s3: true # Required for secure access
      dynamodb: true
      secretsManager: true
      kms: true
    dns:
      enableDnsHostnames: true
      enableDnsSupport: true
    monitoring:
      enabled: true
      detailedMetrics: true # Required for compliance
      alarms:
        natGatewayPacketDropThreshold: 500
        vpcFlowLogDeliveryFailures: 5

  # Step Functions State Machine Configuration
  step-functions-statemachine:
    stateMachineType: "STANDARD"
    loggingConfiguration:
      enabled: true # Mandatory for FedRAMP
      level: "ALL"
      includeExecutionData: true # Required for audit trail
    tracingConfiguration:
      enabled: true # Required for compliance monitoring
    timeout:
      seconds: 3600 # 1 hour
    tags:
      service-type: "workflow"
      compliance-framework: "fedramp-moderate"
      logging-level: "comprehensive"
      audit-trail: "enabled"

  # SSM Parameter Configuration
  ssm-parameter:
    parameterType: "secret" # Required for sensitive configuration
    sensitivityLevel: "confidential" # Advanced features for compliance
    validationPattern: "custom"
    tags:
      service-type: "configuration"
      compliance-framework: "fedramp-moderate"
      data-classification: "sensitive"

  # Observability Configuration Defaults
  observability:
    traceSamplingRate: 0.25  # 25% sampling for enhanced monitoring
    metricsInterval: 60       # 1 minute intervals
    logsRetentionDays: 1095   # 3 years retention
    
    # Alarm thresholds are now just data
    alarmThresholds:
      ec2:
        cpuUtilization: 80
        statusCheckFailed: 1
        networkIn: 50000000  # 50MB - more sensitive
      rds:
        freeStorageSpace: 5  # in GB - more conservative
        cpuUtilization: 80
        connectionCount: 70
      lambda:
        errorRate: 3  # percentage - more sensitive
        duration: 3000  # milliseconds - stricter
        throttles: 5
      alb:
        responseTime: 1.5  # seconds - stricter
        http5xxErrors: 5
        unhealthyTargets: 1
      sqs:
        messageAge: 180  # seconds - more sensitive
        deadLetterMessages: 3
      ecs:
        cpuUtilization: 75
        memoryUtilization: 75
        taskCount: 0
      vpc:
        natGatewayPacketDropThreshold: 500
        natGatewayPortAllocationErrors: 1
    
    # OTel environment variables template
    otelEnvironmentTemplate:
      OTEL_EXPORTER_OTLP_ENDPOINT: 'https://otel-collector.fedramp-moderate.{{ region }}.platform.local:4317'
      OTEL_EXPORTER_OTLP_HEADERS: 'authorization=Bearer {{ authToken }}'
      OTEL_SERVICE_NAME: '{{ componentName }}'
      OTEL_SERVICE_VERSION: '{{ serviceVersion }}'
      OTEL_RESOURCE_ATTRIBUTES: 'service.name={{ serviceName }},deployment.environment={{ environment }},cloud.provider={{ cloudProvider }},cloud.region={{ region }},compliance.framework={{ complianceFramework }}'
      OTEL_TRACES_SAMPLER: 'traceidratio'
      OTEL_TRACES_SAMPLER_ARG: '{{ traceSamplingRate }}'
      OTEL_METRICS_EXPORTER: 'otlp'
      OTEL_LOGS_EXPORTER: 'otlp'
      OTEL_PROPAGATORS: 'tracecontext,baggage,xray'
      OTEL_INSTRUMENTATION_COMMON_DEFAULT_ENABLED: 'true'
      OTEL_BSP_MAX_EXPORT_BATCH_SIZE: '256'  # Smaller batches for compliance
      OTEL_BSP_EXPORT_TIMEOUT: '15000'  # Shorter timeout
      OTEL_METRIC_EXPORT_INTERVAL: '{{ metricsInterval }}'
    
    # EC2 OTel UserData script template
    ec2OtelUserDataTemplate: |
      #!/bin/bash
      # EC2 OpenTelemetry Collector Installation Script - FedRAMP Moderate
      # Managed by SREs, not developers
      
      # Update system with security patches
      yum update -y --security
      
      # Install OTel Collector with verification
      curl -L -o /tmp/otelcol-contrib.deb https://github.com/open-telemetry/opentelemetry-collector-releases/releases/latest/download/otelcol-contrib_linux_amd64.deb
      # Verify package integrity (in production, use GPG verification)
      dpkg -i /tmp/otelcol-contrib.deb
      
      # Create configuration file with secure permissions
      cat > /opt/aws/otel-collector/config.yaml << 'EOF'
      {{ otelAgentConfigJson }}
      EOF
      chmod 600 /opt/aws/otel-collector/config.yaml
      
      # Set environment variables securely
      {{ otelEnvironmentVars }}
      echo "export $(cat /proc/1/environ | tr '\\0' '\\n' | grep OTEL_)" >> /etc/environment
      
      # Start OTel Collector service with audit logging
      systemctl enable otelcol-contrib
      systemctl start otelcol-contrib
      
      # Log completion with audit trail
      echo "OpenTelemetry Collector installation completed at $(date) by $(whoami)" >> /var/log/otel-install.log
      echo "Configuration hash: $(md5sum /opt/aws/otel-collector/config.yaml)" >> /var/log/otel-install.log

  # Logging Configuration Defaults - FedRAMP Moderate
  logging:
    retentionPolicies:
      default:
        retentionDays: 1095  # 3 years
        immutable: true
        encryptionLevel: "enhanced"
        auditRequired: true
        maxSamplingRate: 1.0
    securityClassifications:
      default: "confidential"
      lambda: "confidential"
      ecs: "confidential"
      rds: "confidential"
      s3: "confidential"
      sqs: "confidential"
      vpc: "confidential"
    samplingRates:
      ERROR: 1.0
      WARN: 1.0
      INFO: 1.0
      DEBUG: 0.1
      TRACE: 0.01
    logLevels:
      default: "DEBUG"
      lambda: "DEBUG"
      ecs: "DEBUG"
      rds: "DEBUG"
      s3: "DEBUG"
      sqs: "DEBUG"
      vpc: "DEBUG"
    redactionRules:
      base: ["email", "ssn", "creditCard", "phoneNumber"]
      phi: ["medicalRecordNumber", "insuranceId", "prescriptionData", "diagnosticData"]
      cui: ["governmentId", "securityClearance", "contractorInfo"]
    correlationFields:
      - "traceId"
      - "spanId"
      - "requestId"
      - "userId"
      - "sessionId"
      - "operationId"

  # Route 53 Record Configuration Defaults
  route53-record:
    record:
      ttl: 300
      evaluateTargetHealth: false
    tags:
      Component: "route53-record"
      ManagedBy: "platform"
      ComplianceFramework: "fedramp-moderate"

  # IAM Role Configuration Defaults
  iam-role:
    role:
      maxSessionDuration: 3600
      path: "/"
    compliance:
      permissionsBoundary: true
      leastPrivilege: true
      requireMfa: true
    tags:
      Component: "iam-role"
      ManagedBy: "platform"
      ComplianceFramework: "fedramp-moderate"

  # MCP Server Configuration Defaults
  mcp-server:
    container:
      imageTag: "latest"
      cpu: 512
      memory: 1024
      taskCount: 2
      containerPort: 3000
    loadBalancer:
      enabled: true
      certificateArn: ""
      domainName: ""
    authentication:
      jwtSecret: ""
      tokenExpiration: "30m" # Shorter for FedRAMP
    dataSources:
      git:
        repositoryUrls: []
        accessTokenArn: ""
      aws:
        crossAccountRoles: []
        regions: ["us-east-1"]
      templates:
        repositoryUrl: ""
        branch: "main"
    vpc:
      vpcId: ""
      subnetIds: []
      securityGroupIds: []
    logging:
      retentionDays: 90 # Longer retention for FedRAMP
    monitoring:
      enabled: true
      detailedMetrics: true # Required for FedRAMP
    tags:
      Component: "mcp-server"
      ManagedBy: "platform"
      ComplianceFramework: "fedramp-moderate"

  # Shinobi Platform Intelligence Brain Configuration Defaults
  shinobi:
    compute:
      mode: "ecs"
      cpu: 512
      memory: 1024
      taskCount: 2
      containerPort: 3000
    dataStore:
      type: "dynamodb"
      dynamodb:
        billingMode: "PAY_PER_REQUEST"
    api:
      exposure: "internal"
      loadBalancer:
        enabled: true
      version: "1.0"
      rateLimit:
        requestsPerMinute: 1000
        burstCapacity: 2000
    featureFlags:
      enabled: true
      provider: "aws-appconfig"
      defaults:
        "shinobi.advanced-analytics": true
        "shinobi.ai-insights": false
        "shinobi.auto-remediation": false
        "shinobi.predictive-scaling": false
        "shinobi.cost-optimization": true
        "shinobi.security-scanning": true
        "shinobi.compliance-monitoring": true
        "shinobi.performance-profiling": true
        "shinobi.dependency-analysis": true
        "shinobi.change-impact": true
    dataSources:
      components: true
      services: true
      dependencies: true
      compliance: true
      cost: true
      security: true
      performance: true
    observability:
      provider: "cloudwatch"
      dashboards: ["reliability", "performance", "security"]
      alerts:
        enabled: true
        thresholds:
          cpuUtilization: 70
          memoryUtilization: 70
          responseTime: 1.5
    compliance:
      securityLevel: "enhanced"
      auditLogging: true
    localDev:
      enabled: false
      seedData:
        sampleComponents: true
        sampleServices: true
        sampleMetrics: true
      mockServices: true
    logging:
      retentionDays: 90
      logLevel: "info"
      structuredLogging: true
    tags:
      Component: "shinobi"
      ManagedBy: "platform"

  # SageMaker Notebook Instance Configuration Defaults - FedRAMP Moderate
  sagemaker-notebook-instance:
    instanceType: "ml.m5.large"
    rootAccess: "Disabled"
    directInternetAccess: "Disabled"
    volumeSizeInGB: 100
    platformIdentifier: "notebook-al2-v2"
    instanceMetadataServiceConfiguration:
      minimumInstanceMetadataServiceVersion: "2"
    monitoring:
      enabled: true
      detailedMetrics: true
    security:
      kmsEncryption: true
      vpcOnly: true
    compliance:
      auditLogging: true
      retentionDays: 365
    tags:
      Component: "sagemaker-notebook-instance"
      ManagedBy: "platform"
      compliance-framework: "fedramp-moderate"
      root-access: "disabled"
      internet-access: "vpc-only"
      imds-version: "v2"
      ComplianceFramework: "fedramp-moderate"
